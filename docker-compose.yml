version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: dvd_rental_db
    environment:
      POSTGRES_DB: dvd_rental
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'

  redis:
    image: redis:7
    restart: unless-stopped
    container_name: dvd_rental_redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass secret --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  api:
    build: .
    container_name: dvd_rental_api
    ports:
      - "8080:8080"
    environment:
      - DB_ADDR=postgresql://postgres:postgres@postgres:5432/dvd_rental?sslmode=disable
      - PORT=:8080
      - ENV=development
      - TOKEN_SECRET=dev-secret-key
      - TOKEN_EXP=24h
      - TOKEN_AUD=dev-audience
      - TOKEN_ISS=dev-issuer
      - API_URL=http://localhost:8080
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=secret
      - REDIS_DB=0
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
